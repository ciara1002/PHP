# PHP 變數

變數是用於存儲資訊的"容器"：

```
<?php
$x=5;
$y=6;
$z=$x+$y;
echo $z;
?>
```
運行實例 »
與代數類似
x=5
y=6
z=x+y

在代數中，我們使用字母（如 x），並給它賦值（如 5）。

從上面的運算式 z=x+y ，我們可以計算出 z 的值為 11。

在 PHP 中，這些字母被稱為變數。

lamp	變數是用於存儲資料的容器。

### PHP 變數
與代數類似，可以給 PHP 變數賦予某個值（x=5）或者運算式（z=x+y）。

變數可以是很短的名稱（如 x 和 y）或者更具描述性的名稱（如 age、carname、totalvolume）。

##### PHP 變數規則：
-變數以 $ 符號開始，後面跟著變數的名稱
-變數名必須以字母或者底線開始
-變數名只能包含字母數位字元以及底線（A-z、0-9 和 _ ）
-變數名不能包含空格
-變數名是區分大小寫的（$y 和 $Y 是兩個不同的變數）

lamp	PHP 語句和 PHP 變數都是區分大小寫的。

##### 創建（聲明）PHP 變數
PHP 沒有聲明變數的命令。

變數在您第一次賦值給它的時候被創建：

```
<?php
$txt="Hello world!";
$x=5;
$y=10.5;
?>
```
在上面的語句執行中，變數 txt 將保存值 Hello world!，且變數 x 將保存值 5。

注釋：當您賦一個文本值給變數時，請在文本值兩側加上引號。

PHP 是一門弱類型語言
在上面的實例中，我們注意到，不必向 PHP 聲明該變數的資料類型。

PHP 會根據變數的值，自動把變數轉換為正確的資料類型。

在強類型的程式設計語言中，我們必須在使用變數前先聲明（定義）變數的類型和名稱。

# PHP 變數作用域
變數的作用域是腳本中變數可被引用/使用的部分。

PHP 有四種不同的變數作用域：

-local
-global
-static
-parameter

局部和全域作用域
在所有函數外部定義的變數，擁有全域作用域。除了函數外，全域變數可以被腳本中的任何部分訪問，要在一個函數中訪問一個全域變數，需要使用 global 關鍵字。

在 PHP 函數內部聲明的變數是區域變數，僅能在函數內部訪問：

```
<?php 
$x=5; // 全域變數 

function myTest() 
{ 
    $y=10; // 區域變數 
    echo "<p>測試函數內變數:<p>"; 
    echo "變數 x 為: $x"; 
    echo "<br>"; 
    echo "變數 y 為: $y"; 
}  

myTest(); 

echo "<p>測試函數外變數:<p>"; 
echo "變數 x 為: $x"; 
echo "<br>"; 
echo "變數 y 為: $y"; 
?>
```
程式解說 

>* myTest() 函式定義了 $x 和 $y 變數。 
>* $x 變數在函數外聲明，所以它是全域變數 
>* $y 變數在函數內聲明所以它是區域變數。

當我們調用myTest()函數並輸出兩個變數的值, 函數將會輸出區域變數 $y 的值，但是不能輸出 $x 的值，因為 $x 變數在函數外定義，無法在函數內使用，如果要在一個函數中訪問一個全域變數，需要使用 global 關鍵字。

然後我們在myTest()函數外輸出兩個變數的值，函數將會輸出全區域變數 $x 的值，但是不能輸出 $y 的值，因為 $y 變數在函數中定義，屬於區域變數。

Note	你可以在不同函數中使用相同的變數名稱，因為這些函數內定義的變數名是區域變數，只作用於該函數內。
PHP global 關鍵字
global 關鍵字用於函數內訪問全域變數。

在函數內調用函數外定義的全域變數，我們需要在函數中的變數前加上 global 關鍵字：
```
<?php
$x=5;
$y=10;
 
function myTest()
{
    global $x,$y;
    $y=$x+$y;
}
 
myTest();
echo $y; // 輸出 15
?>
```

PHP 將所有全域變數存儲在一個名為 $GLOBALS[index] 的陣列中。 index 保存變數的名稱。這個陣列可以在函數內部訪問，也可以直接用來更新全域變數。

上面的實例可以寫成這樣：

```
<?php
$x=5;
$y=10;
 
function myTest()
{
    $GLOBALS['y']=$GLOBALS['x']+$GLOBALS['y'];
} 
 
myTest();
echo $y;
?>
```


### Static 作用域
當一個函數完成時，它的所有變數通常都會被刪除。然而，有時候您希望某個區域變數不要被刪除。

要做到這一點，請在您第一次聲明變數時使用 static 關鍵字：

```
<?php
function myTest()
{
    static $x=0;
    echo $x;
    $x++;
}
 
myTest();
myTest();
myTest();
?>
```

運行實例 »
然後，每次調用該函數時，該變數將會保留著函數前一次被調用時的值。

注釋：該變數仍然是函數的區域變數。

參數作用域
參數是通過調用代碼將值傳遞給函數的區域變數。

參數是在參數列表中聲明的，作為函式宣告的一部分：

```
<?php
function myTest($x)
{
    echo $x;
}
myTest(5);
?>
```
